Unlicense Yourself: Set Your Code Free
======================================

Be part of the solution, not the problem: go [public domain](http://me.stpeter.im/essays/publicdomain.html) today.

The Unlicense
-------------
To stop being an evil little monopolist and opt out of the copyright game altogether, put your next software project into the [public domain](http://me.stpeter.im/essays/publicdomain.html) using the following (un)licensing statement:

    :::text
    This is free and unencumbered software released into the public domain.
    
    Anyone is free to copy, modify, publish, use, compile, sell, or distribute
    this software, either in source code form or as a compiled binary, for any
    purpose, commercial or non-commercial, and by any means.
    
    In jurisdictions that recognize copyright laws, the author or authors of
    this software dedicate any and all copyright interest in the software to the
    public domain. We make this dedication for the benefit of the public at
    large and to the detriment of our heirs and successors. We intend this
    dedication to be an overt act of relinquishment in perpetuity of all present
    and future rights to this software under copyright law.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    
    For more information, please refer to <http://unlicense.org/>

You would traditionally put the above statement into a file named `COPYING` or `LICENSE`. However, to explicitly distance yourself from the whole concept of copyright licensing, we recommend that you put your unlicensing statement in a file named [`UNLICENSE`](./UNLICENSE). Doing so also means that your project can more easily be found using e.g. [Google Code Search](http://www.google.com/codesearch?q=file:%5EUNLICENSE(%5C.txt)%3F%24), enabling others to reuse your code in their own unencumbered public domain projects.

Accepting Contributions
-----------------------

In order to ensure your project remains completely free and unencumbered by copyright, it is advisable that you ask any contributors to explicitly dedicate their code base contributions to the public domain.

At minimum, you should ask them to accompany any patches with a simple statement like the following:

    :::text
    I dedicate any and all copyright interest in this software to the
    public domain. I make this dedication for the benefit of the public at
    large and to the detriment of my heirs and successors. I intend this
    dedication to be an overt act of relinquishment in perpetuity of all
    present and future rights to this software under copyright law.

Better yet is to ask the major contributors to [digitally sign](http://en.wikipedia.org/wiki/Digital_signature) a more explicit copyright release (such as [`WAIVER`](./WAIVER)), and then to keep a record of such signatures in an `AUTHORS` file accompanying your software. Using [GnuPG](http://www.gnupg.org/), contributors can sign a copyright waiver file as follows:

    :::bash
    $ gpg --no-version --armor --sign WAIVER

If a contributor makes changes or enhancements in his capacity as an employee of some organization, then the above may be insufficient and you would additionally need to ask for a copyright disclaimer signed by a company officer. For more information, have a look at [how the SQLite project handles this](http://www.sqlite.org/copyright.html). The Free Software Foundation also [provides an example](http://www.fsf.org/licensing/licenses/gpl-howto.html) of a simple copyright disclaimer to be signed by an employer.

Unlicensed Free Software
------------------------

The following software projects have already adopted the Unlicense or a derivative thereof:

* [CRM114.rb](http://crm114.rubyforge.org/), a Ruby interface to the CRM114 Controllable Regex Mutilator.
* [OpenPGP.rb](http://openpgp.rubyforge.org/), a Ruby implementation of the OpenPGP Message Format (RFC 4880).

Public Domain Software
----------------------

Some examples of well-known public domain or [license-free](http://en.wikipedia.org/wiki/License-free_software) software libraries and applications:

* [SQLite](http://www.sqlite.org/), the [most widely-deployed](http://www.sqlite.org/mostdeployed.html) SQL database in the world, is [in the public domain](http://www.sqlite.org/copyright.html).
* [qmail](http://www.qmail.org/), the [second-most popular](http://www.qmail.org/top.html) MTA on the Internet, is [in the public domain](http://cr.yp.to/qmail/dist.html).
* [djbdns](http://cr.yp.to/djbdns.html), the [second-most popular](http://en.wikipedia.org/wiki/Djbdns#cite_note-2) DNS server software on the Internet, is in the public domain.
* [dlmalloc](http://g.oswego.edu/dl/html/malloc.html), a widely-used memory allocator implementation for C, is in the public domain.
* [CMUCL](http://www.cons.org/cmucl/), a popular implementation of the [Common Lisp](http://lispers.org) programming language, is mostly in the public domain.
* [SBCL](http://www.sbcl.org/), another popular Common Lisp implementation, is likewise mostly [in the public domain](http://www.sbcl.org/history.html).
* [byacc](http://invisible-island.net/byacc/byacc.html), the Berkeley [Yacc](http://en.wikipedia.org/wiki/Yacc) parser generator, is in the public domain.
* [Lemon](http://www.hwaci.com/sw/lemon/), a modern LALR(1) parser generator, is in the public domain.
* [re2c](http://re2c.org/), a high-performance lexer generator, is in the public domain.
* [Docutils](http://docutils.sourceforge.net/), the Python text-processing system, is mostly in the public domain.
* [PyCrypto](http://www.dlitz.net/software/pycrypto/), the Python cryptography toolkit, is largely in the public domain.
* [Crypto++](http://www.cryptopp.com/), a cryptographic library for C++, is mostly in the public domain.
* [MPICH2](http://www.mcs.anl.gov/research/projects/mpich2/), a high-performance implementation of the [MPI](http://en.wikipedia.org/wiki/Message_Passing_Interface) standard, is largely in the public domain.
* [MinGW](http://www.mingw.org/)'s runtime, which provides POSIX compatibility for Windows, is [in the public domain](http://www.mingw.org/license).

Other Popular Unlicenses
------------------------

Some other ways to set your code free:

* [CC0 - Creative Commons Zero](http://creativecommons.org/publicdomain/zero/1.0/) is not intended for software per se.
* [WTFPL - Do What The Fuck You Want To Public License](http://sam.zoy.org/wtfpl/) can't be beat for blunt directness.

Unlicensing Resources
---------------------

If setting your code entirely free still seems like a somewhat daunting prospect, try these perspectives on for size:

* [Who's Afraid of the Public Domain?](http://me.stpeter.im/essays/publicdomain.html)
* [The Surprising History of Copyright and The Promise of a Post-Copyright World](http://questioncopyright.org/promise)
