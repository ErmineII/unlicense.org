Unlicense Yourself: Set Your Code Free
======================================

What is the Unlicense?
----------------------

The Unlicense is a template for disclaiming copyright interest in software you've written; in other words, it is a template for dedicating your software to the [public domain](http://me.stpeter.im/essays/publicdomain.html). It combines a copyright waiver [patterned](http://ar.to/2010/01/dissecting-the-unlicense) after the [very successful](http://www.sqlite.org/famous.html) public domain [SQLite](http://www.sqlite.org/) project with the no-warranty statement from the widely-used [MIT/X11 license](http://en.wikipedia.org/wiki/MIT_License).

Why Use the Unlicense?
----------------------

Because you have more important things to do than enriching lawyers or imposing petty restrictions on users of your code. How often have you passed up on utilizing a great software library just because its [open source](http://www.opensource.org/) license was not compatible with your own preferred [flavor](http://www.opensource.org/licenses/alphabetical) of open source? How many precious hours of your life have you spent deliberating how to license your software or worrying about licensing compatibility with other software? You will never get those hours back, but here's your chance to start cutting your losses. Life's too short, let's get back to coding.

The Unlicense
-------------

To opt out of the copyright game altogether and set your code free, put your next software project into the [public domain](http://me.stpeter.im/essays/publicdomain.html) using the following (un)licensing statement:

    :::text
    This is free and unencumbered software released into the public domain.
    
    Anyone is free to copy, modify, publish, use, compile, sell, or
    distribute this software, either in source code form or as a compiled
    binary, for any purpose, commercial or non-commercial, and by any
    means.
    
    In jurisdictions that recognize copyright laws, the author or authors
    of this software dedicate any and all copyright interest in the
    software to the public domain. We make this dedication for the benefit
    of the public at large and to the detriment of our heirs and
    successors. We intend this dedication to be an overt act of
    relinquishment in perpetuity of all present and future rights to this
    software under copyright law.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.
    
    For more information, please refer to <http://unlicense.org/>

In a saner world, you would only need the first two paragraphs. For the time being you'll probably [want to retain](http://ar.to/2010/01/dissecting-the-unlicense) the whole shebang. (You should feel free, though, to leave out the last line containing the link to this site, if that's your preference.)

You would traditionally put the above statement into a file named `COPYING` or `LICENSE`. However, to explicitly distance yourself from the whole concept of copyright licensing, we recommend that you put your unlicensing statement in a file named [`UNLICENSE`](./UNLICENSE). Doing so also means that your project can more easily be found on e.g. [GitHub](http://www.google.com/search?q=allinurl%3A%22UNLICENSE%22+site%3Agithub.com), [Bitbucket](http://www.google.com/search?q=allinurl%3A%22UNLICENSE%22+site%3Abitbucket.org) or [Google Code Search](http://www.google.com/codesearch?q=file:%5EUNLICENSE(%5C.txt)%3F%24), enabling others to reuse your code in their own unencumbered public domain projects.

Unlicensing Contributions
-------------------------

In order to ensure your project remains completely free and unencumbered by copyright, it is advisable that you ask any contributors to explicitly dedicate their code base contributions to the public domain.

At minimum, you should ask them to accompany any non-trivial patches with a simple statement like the following:

    :::text
    I dedicate any and all copyright interest in this software to the
    public domain. I make this dedication for the benefit of the public at
    large and to the detriment of my heirs and successors. I intend this
    dedication to be an overt act of relinquishment in perpetuity of all
    present and future rights to this software under copyright law.

Better yet is to ask the major contributors to [digitally sign](http://en.wikipedia.org/wiki/Digital_signature) a more explicit copyright release (see an example [`WAIVER`](./WAIVER) file), and then to keep a record of such signatures in an `AUTHORS` file accompanying your software. Using [GnuPG](http://www.gnupg.org/), contributors can sign a copyright waiver file as follows:

    :::bash
    $ gpg --no-version --armor --sign WAIVER

Note that if a contributor makes significant changes or enhancements in his capacity as an employee of some organization, then the above may be insufficient and you would additionally need to ask for a copyright disclaimer signed by a company officer. For more information, have a look at [how the SQLite project handles this](http://www.sqlite.org/copyright.html). The Free Software Foundation also [provides an example](http://www.fsf.org/licensing/licenses/gpl-howto.html) of a simple copyright disclaimer to be signed by an employer.

Unlicensed Free Software
------------------------

The following software projects have already adopted the Unlicense or a derivative thereof:

* [CRM114.rb](http://crm114.rubyforge.org/), a Ruby interface to the CRM114 Controllable Regex Mutilator.
* [GrowlAMQP](http://gemcutter.org/gems/growl-amqp), a daemon that reports AMQP messages via Growl.
* [Markdoc](http://markdoc.org/), a lightweight Markdown-based wiki system.
* [netscan](http://bitbucket.org/noname/netscan/), a set of low-level network utilities.
* [OpenPGP.rb](http://openpgp.rubyforge.org/), a Ruby implementation of the OpenPGP Message Format (RFC 4880).
* [PHP.rb](http://php.rubyforge.org/), a Ruby-to-PHP code generator.
* [Prosper](http://prosper-lib.com/), a database abstraction layer for PHP 5.3.
* [RDF.rb](http://rdf.rubyforge.org/), a Ruby library for working with Resource Description Framework (RDF) data.
* [Trinity](http://trinity.datagraph.org/), a Ruby web framework for publishing Linked Data.
* [Tubras](http://code.google.com/p/tubras/), a C++/Lua game engine.
* [SXP](http://sxp.rubyforge.org/), a data interchange format based on S-expressions.

If you would like your own project added to this list, [drop us a note](http://groups.google.com/group/unlicense) on the mailing list or [create a ticket](http://github.com/bendiken/unlicense.org/issues).

Public Domain Software
----------------------

Some examples of well-known public domain or [license-free](http://en.wikipedia.org/wiki/License-free_software) software libraries and applications:

* [CERN httpd](http://en.wikipedia.org/wiki/CERN_httpd), the original World Wide Web daemon developed by Tim Berners-Lee, was [in the public domain](http://tenyears-www.web.cern.ch/tenyears-www/Welcome.html).
* [SQLite](http://www.sqlite.org/), the [most widely-deployed](http://www.sqlite.org/mostdeployed.html) SQL database in the world, is [in the public domain](http://www.sqlite.org/copyright.html).
* [qmail](http://www.qmail.org/), the [second-most popular](http://www.qmail.org/top.html) MTA on the Internet, is [in the public domain](http://cr.yp.to/qmail/dist.html).
* [djbdns](http://cr.yp.to/djbdns.html), the [second-most popular](http://en.wikipedia.org/wiki/Djbdns#cite_note-2) DNS server software on the Internet, is in the public domain.
* [dlmalloc](http://g.oswego.edu/dl/html/malloc.html), a widely-used memory allocator implementation for C, is in the public domain.
* [CMUCL](http://www.cons.org/cmucl/), a popular implementation of the [Common Lisp](http://lispers.org) programming language, is mostly in the public domain.
* [SBCL](http://www.sbcl.org/), another popular Common Lisp implementation, is likewise mostly [in the public domain](http://www.sbcl.org/history.html).
* [CLIPS](http://clipsrules.sourceforge.net/), a widely-used forward-chaining, rule-based inference engine, is in the public domain.
* [byacc](http://invisible-island.net/byacc/byacc.html), the Berkeley [Yacc](http://en.wikipedia.org/wiki/Yacc) parser generator, is in the public domain.
* [Lemon](http://www.hwaci.com/sw/lemon/), a thread-safe LALR(1) parser generator, is in the public domain.
* [re2c](http://re2c.org/), a high-performance lexer generator, is in the public domain.
* [Docutils](http://docutils.sourceforge.net/), the Python text-processing system, is mostly in the public domain.
* [PyCrypto](http://www.dlitz.net/software/pycrypto/), the Python cryptography toolkit, is largely in the public domain.
* [Crypto++](http://www.cryptopp.com/), a cryptographic library for C++, is mostly in the public domain.
* [MPICH2](http://www.mcs.anl.gov/research/projects/mpich2/), a high-performance implementation of the [MPI](http://en.wikipedia.org/wiki/Message_Passing_Interface) standard, is largely in the public domain.
* [MinGW](http://www.mingw.org/)'s runtime, which provides POSIX compatibility for Windows, is [in the public domain](http://www.mingw.org/license).
* [WPDCC](http://www.whoow.org/project/wpdcc/), a public domain C compiler, is in the public domain.

Other Popular Unlicenses
------------------------

Some other ways to set your code free:

* [BOLA - Buena Onda License Agreement](http://blitiri.com.ar/p/bola/) is similar to the Unlicense in intent.
* [CC0 - Creative Commons Zero](http://creativecommons.org/publicdomain/zero/1.0/) is not intended for software per se.
* [WTFPL - Do What The Fuck You Want To Public License](http://sam.zoy.org/wtfpl/) can't be beat for blunt directness.

Unlicensing Resources
---------------------

If setting your code entirely free still seems a somewhat daunting prospect, try these perspectives on for size:

* [Who's Afraid of the Public Domain?](http://me.stpeter.im/essays/publicdomain.html)
* [The Surprising History of Copyright and The Promise of a Post-Copyright World](http://questioncopyright.org/promise)
* [Set Your Code Free](http://ar.to/2010/01/set-your-code-free)
* [Dissecting the Unlicense: Software Freedom in Four Clauses and a Link](http://ar.to/2010/01/dissecting-the-unlicense)
* [Why I'm Going Public](http://blog.zacharyvoase.com/2010-01-04-why-im-going-public)
* [The Promising Future of the Unlicense](http://bhuga.net/2010/01/promising-future-unlicense)
